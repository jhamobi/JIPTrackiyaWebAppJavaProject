package com.jhamobi.trackiya.client;

import java.util.Arrays;
import java.util.List;

import com.google.gwt.cell.client.ImageCell;
import com.google.gwt.safehtml.shared.SafeHtmlBuilder;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.cellview.client.Column;
import com.google.gwt.user.cellview.client.TextColumn;
import com.google.gwt.user.cellview.client.HasKeyboardSelectionPolicy.KeyboardSelectionPolicy;

public class VehicleListWebPage {
	
    String imagePath = "images/ic_launcher.png";


	public VehicleListWebPage() {
	}

	public CellTable<VehicleDetail> InitVehicleListWebPage() {
		
		VehicleDetail vehicle1 = new VehicleDetail("MH12AE7401", "Auto", "John" , "9730246928" , "Smith" , "8605662779" , "Running" , "Hyatt, Vimannagar" ,"9.5 Hrs");
		VehicleDetail vehicle2 = new VehicleDetail("MH12AE7410", "Uno", "Mohan" , "9730246928" , "Ram" , "8605662779" , "Stop" , "Le Royale , Hinzewadi" , "5 hrs");

		final List<VehicleDetail> VehicleList = Arrays.asList(vehicle1 , vehicle2);

		// Create a CellTable.
		CellTable<VehicleDetail> table = new CellTable<VehicleDetail>();
		table.setKeyboardSelectionPolicy(KeyboardSelectionPolicy.ENABLED);

		// Add a text column to show the name.
		TextColumn<VehicleDetail> vehicleNum = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getVehicleNum();
			}
		};
		table.addColumn(vehicleNum, "Vehicle No.");

		// Add a text column to show the name.
		TextColumn<VehicleDetail> vehicleType = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getVehicleType();
			}
		};
		table.addColumn(vehicleType, "Vehicle Type");

		TextColumn<VehicleDetail> driverName = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getDriverName();
			}
		};
		table.addColumn(driverName, "Driver Name");

		TextColumn<VehicleDetail> driverNum = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getDriverNum();
			}
		};
		table.addColumn(driverNum, "Driver Number");

		TextColumn<VehicleDetail> ownerName = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getOwnerName();
			}
		};
		table.addColumn(ownerName, "Owner Name");

		TextColumn<VehicleDetail> ownerNum = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getOwnerNum();
			}
		};
		table.addColumn(ownerNum, "Owner Number");

		// Add a text column to show the name.
		TextColumn<VehicleDetail> runningStatus = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getVehicleRunningStatus();
			}
		};
		table.addColumn(runningStatus, "Running Status");
		
//		ImageCell imageCell1 = new ImageCell() {
//		    @Override
//		    public void render(Context context, String value, SafeHtmlBuilder sb) {
//		        super.render(context, value, sb);
//		        sb.appendHtmlConstant("<img src = '"+imagePath+"' height = '10px' width = '10px' />");
//
//		    }
//		};
//		
//		Column<VehicleDetail, String> columnflag = new Column<VehicleDetail, String>(imageCell1) {
//
//
//			@Override
//			public String getValue(VehicleDetail object) {
//				// TODO Auto-generated method stub
//				return object.getVehicleRunningStatus();
//			}
//		};
//		
//		  table.addColumn(columnflag, "Running Status");

		// Add a text column to show the name.
		TextColumn<VehicleDetail> currLocation = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getVehicleCurrLoc();
			}
		};
		table.addColumn(currLocation, "Current Location");
		
		// Add a text column to show the name.
		TextColumn<VehicleDetail> timeLapsed = new TextColumn<VehicleDetail>() {
			@Override
			public String getValue(VehicleDetail object) {
				return object.getVehicleTimeLapsed();
			}
		};
		table.addColumn(timeLapsed, "Time Lapsed");

		// Set the total row count. This isn't strictly necessary, but it
		// affects
		// paging calculations, so its good habit to keep the row count up to
		// date.
		table.setRowCount(VehicleList.size(), true);

		// Push the data into the widget.
		table.setRowData(0, VehicleList);

		return table;
	}

}
