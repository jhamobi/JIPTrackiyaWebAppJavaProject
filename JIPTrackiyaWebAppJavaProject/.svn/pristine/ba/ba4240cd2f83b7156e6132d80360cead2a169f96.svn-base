package com.jhamobi.trackiya.server.tomcat.action.impl;

import java.io.PrintWriter;
import java.sql.Connection;

import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;

import com.jhamobi.trackiya.server.database.TrackiyaDBTableColumnNames;
import com.jhamobi.trackiya.server.database.TrackiyaMySqlDBConnection;
import com.jhamobi.trackiya.server.tomcat.TrackiyaConstants;
import com.jhamobi.trackiya.server.tomcat.action.TrackiyaServerErrorType;
import com.jhamobi.trackiya.server.tomcat.action.TrackiyaServerErrors;
import com.jhamobi.trackiya.server.tomcat.model.VehicleState;

/**
 * 
 * @author majha
 * 
 */
public class UpdateVehicleStateAction extends
		com.jhamobi.trackiya.server.tomcat.action.AbstractAction {

	@Override
	public void execute(HttpServletRequest request, HttpServletResponse response) {
		try {

			PrintWriter out = response.getWriter();
			JSONObject jsonResponse = new JSONObject();

			try {
				ServletInputStream inputStream = request.getInputStream();
				String requestJson = convertStreamToString(inputStream);
				// A Simple JSONObject Creation
				JSONObject jsonRequest = new JSONObject(requestJson);

				String id = jsonRequest
						.getString(TrackiyaDBTableColumnNames.VEHICLE_ID);
				String time = jsonRequest
						.getString(TrackiyaDBTableColumnNames.TIME);
				int state= jsonRequest.getInt(TrackiyaConstants.VEHICLE_STATE);

				TrackiyaMySqlDBConnection instaBuddyDBConnection = TrackiyaMySqlDBConnection
						.getInstance();
				Connection dbConnection = instaBuddyDBConnection
						.getDBConnection();
				try {
					if (id != null) {
						if(state == VehicleState.REPORTED.getState()){
							updateReportTime(instaBuddyDBConnection, dbConnection, id, time, jsonResponse);
						}else{
						boolean exist = instaBuddyDBConnection.isReportTimeInsertedForToday(dbConnection, id);
						if(exist){
							if(state == VehicleState.RELEASED.getState())
								updateReleaseTime(instaBuddyDBConnection, dbConnection, id, time, jsonResponse);
							else if(state == VehicleState.STARTED.getState())
								updateStartTime(instaBuddyDBConnection, dbConnection, id, time, jsonResponse);
							else if (state == VehicleState.END.getState())
								updateEndTime(instaBuddyDBConnection, dbConnection, id, time, jsonResponse);
						}else{
							jsonResponse.put(TrackiyaConstants.SUCCESS, false);
							jsonResponse.put(TrackiyaConstants.ERROR_TYPE,
									TrackiyaServerErrorType.MISSING_REPORT_TIME);
							jsonResponse.put(TrackiyaConstants.ERROR,
									TrackiyaServerErrors.MISSING_REPORT_TIME);
						}
						}
						
					}else if (id == null || id.trim().isEmpty()) {
						jsonResponse.put(TrackiyaConstants.SUCCESS, false);
						jsonResponse.put(TrackiyaConstants.ERROR_TYPE,
								TrackiyaServerErrorType.INVALID_VEHICLE_ID);
						jsonResponse.put(TrackiyaConstants.ERROR,
								TrackiyaServerErrors.INVALID_VEHICLE_ID);
					}
				} catch (Exception e) {
					jsonResponse.put(TrackiyaConstants.SUCCESS, false);
					jsonResponse.put(TrackiyaConstants.ERROR_TYPE,
							TrackiyaServerErrorType.SERVER_EXCEPTION);
					jsonResponse.put(TrackiyaConstants.ERROR, e.getMessage());

					TrackiyaConstants.LOGGER
							.error("Error in login action", e);
				} finally {
					instaBuddyDBConnection.closeDBConnection(dbConnection);
				}
			} catch (Exception e) {
				jsonResponse.put(TrackiyaConstants.SUCCESS, false);
				jsonResponse.put(TrackiyaConstants.ERROR_TYPE,
						TrackiyaServerErrorType.SERVER_EXCEPTION);
				jsonResponse.put(TrackiyaConstants.ERROR, e.getMessage());

				TrackiyaConstants.LOGGER.error("Error in login action", e);
			}

			try {
				out.print(jsonResponse.toString());
			} finally {
				out.flush();
				out.close();
			}
		} catch (Exception e) {
			TrackiyaConstants.LOGGER.error("Error in login action", e);
		}

	}
	
	private void updateReleaseTime(TrackiyaMySqlDBConnection instaBuddyDBConnection, Connection dbConnection, String id, String time, JSONObject jsonResponse) throws Exception{
		instaBuddyDBConnection.insertReleaseTime(dbConnection, id, time);
		jsonResponse.put(TrackiyaConstants.SUCCESS, true);
	}
	
	private void updateReportTime(TrackiyaMySqlDBConnection instaBuddyDBConnection, Connection dbConnection, String id, String time, JSONObject jsonResponse) throws Exception{
		instaBuddyDBConnection.insertReportTime(dbConnection, id, time);
		jsonResponse.put(TrackiyaConstants.SUCCESS, true);
	}

	private void updateStartTime(TrackiyaMySqlDBConnection instaBuddyDBConnection, Connection dbConnection, String id, String time, JSONObject jsonResponse) throws Exception{
		instaBuddyDBConnection.insertStartTime(dbConnection, id, time);
		jsonResponse.put(TrackiyaConstants.SUCCESS, true);
	}
	
	private void updateEndTime(TrackiyaMySqlDBConnection instaBuddyDBConnection, Connection dbConnection, String id, String time, JSONObject jsonResponse) throws Exception{
		instaBuddyDBConnection.insertStartTime(dbConnection, id, time);
		jsonResponse.put(TrackiyaConstants.SUCCESS, true);
	}
}
